name: Build docker image

on:
  release:
    types:
      - created

jobs:

  build:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get composer cache directory
        id: composer-cache
        run: echo "COMPOSER_PATH_CACHE=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer vendor
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.COMPOSER_PATH_CACHE }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install
        run: composer install --ignore-platform-reqs --optimize-autoloader --no-dev --no-progress --prefer-dist

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            esst/translation-extractor
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build & Push
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: .
          file: ./Dockerfile.prod
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
